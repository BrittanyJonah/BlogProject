@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Microsoft.AspNetCore.Identity
@model IPagedList<PersonalBlog.Models.Blog>
@inject PersonalBlog.Services.IImageService _imageService
@inject SignInManager<BlogUser> SignInManager
@inject PersonalBlog.Services.ISlugService _slugService
@inject PersonalBlog.Data.ApplicationDbContext _context

@{ ViewData["Title"] = "Categories"; }

<!-- =======================
Inner intro START -->
<section class="pt-4">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card card-overlay-bottom h-300 overflow-hidden text-center" style="background-image:url(/images/categories.jpeg); background-position: center left; background-size: cover;">
                    <!-- Card Image overlay -->
                    <div class="card-img-overlay d-flex align-items-center p-3 pb-4 px-sm-5">
                        <div class="col-12 mt-auto d-md-flex justify-content-between align-items-center">
                            <h1 class="text-white display-5">Categories</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Create Blog btn if Admin only-->
        @if (User.IsInRole("Admin"))
        {
            <div class="col-12">
                <a class="btn btn-success mt-3" asp-action="Create">Create</a>
            </div>
        }
    </div>
</section>

<!-- =======================
Main content START -->
<section class="position-relative p-0">
    <div class="container">
        <div class="row g-4">

            @foreach (var blog in Model)
            {<!-- Card item START --><div class="col-md-6">
                    <div class="card card-overlay-bottom card-img-scale">
                        <!-- Card Image -->
                        <img class="card-img" src="@_imageService.DecodeImage(blog.ImageData, blog.ContentType)" style="height: 420px; object-fit: cover;" alt="Blog Image">
                        <!-- Card Image overlay -->
                        <div class="card-img-overlay d-flex align-items-center p-3 p-sm-5">
                            <div class="w-100 mt-auto">
                                <div class="col">
                                    <!-- Card category -->
                                    <!--<a asp-action="Details" asp-route-slug="@blog.Slug" class="badge bg-success mb-2"><i class="fas fa-circle me-2"></i>Photography</a>-->
                                    <!-- Card title -->
                                    <h2 class="text-white display-6"><a asp-action="Details" asp-route-slug="@_slugService.urlFriendly(blog.Name)" class="btn-link text-reset stretched-link fw-normal">@Html.DisplayFor(modelItem => blog.Name)</a></h2>
                                    <!-- Card info -->
                                    <ul class="nav nav-divider text-white-force align-items-center d-none d-sm-inline-block">
                                        <li class="nav-item">
                                            <div class="nav-link">
                                                <div class="d-flex align-items-center text-white position-relative">
                                                    <div class="avatar avatar-sm">
                                                        <img class="avatar-img rounded-circle" src="@_imageService.DecodeImage(blog.BlogUser.ImageData, blog.BlogUser.ContentType)" alt="avatar">
                                                    </div>
                                                    <span class="ms-3">by <a asp-controller="Home" asp-action="About" class="stretched-link text-reset btn-link">Brittany</a></span>
                                                </div>
                                            </div>
                                        </li>
                                        <li class="nav-item">@blog.Created.ToString("MMM dd, yyyy")</li>
                                        <li class="nav-item">
                                            <a class="btn-link">
                                                <i class="fas fa-comment-alt me-1"></i>
                                                @{int postCount = _context.Posts.Where(p => p.BlogId.Equals(blog.Id)).Count();}

                                                @{string txtPost = "";}
                                                @postCount @{if (postCount == 1) { txtPost = "post"; } else { txtPost = "posts"; } } @txtPost
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                               
                            </div>
                        </div>
                    </div>
                </div> <!-- Card item END -->
            }
        </div><!-- Row end -->
        <!-- Pagination START -->
        @if (Model.PageCount > 1)
        {
            <div class="col-12 d-flex justify-content-center mt-5">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
            </div>
        }
        <!-- Pagination END -->

    </div>
</section>
<!-- =======================
Main content END -->
<br>
<br>